'''
Задача на системы счисления
'''

# ex = 9 ** 8 + 3 ** 5 - 9                # исходное выражение
# count = 0                               # переменная для подсчета
# while ex:
#     if ex % 3 == 2:                     # что ищем?
#         count = count + 1
#     ex = ex // 3                        # уменьшение исходного числа
#
# print(count)
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
# ex = 4 ** 512 + 8 ** 512 - 2 ** 128 - 250
# print(bin(ex)[2:].count('0'))
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
# for i in range(2,100):
#     x = 67
#     x_N = ''
#     while x > 0:
#         x_N += str(x % i)
#         x //= i
#     x_N = x_N[::-1]
#     if x_N[-1] == '1' and len(x_N) == 4:
#         print(x_N)
#         break
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#Укажите через запятую в порядке возрастания все десятичные числа,
# не превосходящие 25, запись которых в системе счисления с основанием
# четыре оканчивается на 11?

# for i in range(1,26):
#     x = i
#     x_4 = ''
#     while x > 0:
#         x_4 += str(x % 4)
#         x //= 4
#     x_4 = x_4[::-1]
#     if x_4[-2:] == '11':
#         print(f'{i},')

# for number in '0', '1':
#     print(f'{int(number + '11',4)}, ')
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________

#Укажите через запятую в порядке возрастания все
# основания систем счисления, в которых запись числа 23 оканчивается на 2.

#k * N + 2 = 23
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________

# left = 1 * 7 ** 2 + 0 + 1
# right = left - 1
# for i in range(3,100):
#     chislo = 1 * i ** 2 + 2 * i + 1
#     if chislo == right:
#         x = i
#         break
#
# x_3 = ''
# while x > 0:
#     x_3 += str(x % 3)
#     x //= 3
#
# x_3 = x_3[::-1]
# print(x_3)
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#11)	Укажите через запятую в порядке возрастания все десятичные
# натуральные числа, не превосходящие 17, запись которых в
# троичной системе счисления оканчивается на две одинаковые цифры


# for i in range(1,18):
#     x = i
#     x_3 = ''
#     while x > 0:
#         x_3 += str(x % 3)
#         x //= 3
#     x_3 = x_3[::-1]
#     if x_3[-1:] == x_3[-2:-1]:
#         print(f'{i},')
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#13)	Укажите, сколько всего раз встречается  цифра 1 в записи чисел
# 12, 13, 14, …, 31 в системе счисления с основанием 5.

# count = 0
# for i in range(12, 32):
#     x = i
#     x_5 = ''
#     while x > 0:
#         x_5 += str(x % 5)
#         x //= 5
#     x_5 = x_5[::-1]
#
#     count = count + x_5.count('1')
#
# print(f'{count},')
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#5)	В системе счисления с некоторым основанием
# десятичное число 129 записывается как 1004. Укажите это основание.

# number = 129
# for i in range(5,100):
#     number_str = ''
#     while number > 0:
#         number_str = number_str + number % i
#         number = number // i
#     number_str = number_str[:-1]
#     if number_str == '1004':
#         print(i)
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#Запись числа 381 10 в системе счисления с основанием N оканчивается на 3
# и содержит 3 цифры. Укажите наибольшее возможное основание этой
# системы счисления N.

# array_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# array_2 = [11, 12, 13, 14, 15, 16, 17, 18, 19]
#
# array = array_1 * 2
#
# summ = 0
# for i in range(len(array) - 1):
#     summ += array[i]
#
#
# print(summ)
# for i in range(12, 32):
#     x = i
#     x_5 = ''
#     while x > 0:
#         x_5 += str(x % 5)
#         x //= 5
#     x_5 = x_5[::-1]
#
#     count = count + x_5.count('1')
#
# print(f'{count},')
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#39)	Найдите основание системы счисления, в которой выполнено умножение: 3·213 = 1043.

# for N in range(2,36):
#     x1 = 3
#     x2 = 213
#     x3 = 1043
#     x_1_str = ''
#     x_2_str = ''
#     x_3_str = ''
#     while x1 > 0:
#         x_1_str += str(x1 % N)
#         x1 //= N
#     x_1_str = x_1_str[::-1]
#     while x2 > 0:
#         x_2_str += str(x2 % N)
#         x2 //= N
#     x_2_str = x_2_str[::-1]
#     while x3 > 0:
#         x_3_str += str(x3 % N)
#         x3 //= N
#     x_3_str = x_3_str[::-1]
#     if int(x_1_str, N) * int(x_2_str, N) == int(x_3_str,N):
#         print(N)
#
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
# Найти сумму восьмеричных чисел 178 +1708 +17008 +...+17000008,
# перевести в 16-ую систему счисления. Найдите в записи числа, равного этой сумме,
# третью цифру слева.
#
# a = '17'
# b = '1700000'
#
# summ = 0
# while a <= b:
#     summ += int(a,8)
#     a += '0'
#
# number_16 = hex(summ)[2:]
# print(number_16[2])
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#Чему равно наименьшее основание позиционной системы счисления
# , при котором 225x = 405y? Ответ записать в виде целого числа.

# for x in range(6, 100):
#     for y in range(6, 100):
#         if (2 * x ** 2 + 2*x + 5) == (4 * y ** 2 + 5):
#             print(x)
#             break

#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#126)	(Е.А. Мирончик) Некоторое число X из десятичной системы счисления перевели
# в системы счисления с основаниями 16 и 8. Часть символов при записи утеряна.
# Позиции утерянных символов обозначены знаком *:
#X= 1*016 = 56*8
#Определите число X.


# alph = "0123456789ABCDEF"
# res = 0
#
# for i in alph:
#     n_16 = f'1{i}0'
#     n_8 = oct(int(n_16,16))[2:]
#     if len(n_8) == 3 and n_8[0] == '5'and n_8[1] == '6':
#         res = int(n_16,16)
#
# print(res)
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
#135
# count = 0
# alph = "0123456789ABCDEF"
#
# for i in alph:
#     n_16 = f'{i}A'
#     n_8 = oct(int(n_16,16))[2:]
#     if len(n_8) == 3:
#         count += 1
# print(count)
#______________________________________________________________________________________________________________________
#______________________________________________________________________________________________________________________
